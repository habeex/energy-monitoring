// Mocks generated by Mockito 5.4.4 from annotations
// in solar_monitor/test/services/monitoring_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:solar_monitor/core/network/network.dart' as _i2;
import 'package:solar_monitor/data/model/monitoring.dart' as _i5;
import 'package:solar_monitor/data/model/monitoring_type.dart' as _i6;
import 'package:solar_monitor/data/service/monitoring_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNetwork_0 extends _i1.SmartFake implements _i2.Network {
  _FakeNetwork_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MonitoringService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMonitoringService extends _i1.Mock implements _i3.MonitoringService {
  MockMonitoringService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Network get network => (super.noSuchMethod(
        Invocation.getter(#network),
        returnValue: _FakeNetwork_0(
          this,
          Invocation.getter(#network),
        ),
      ) as _i2.Network);

  @override
  _i4.Future<List<_i5.Monitoring>> getMonitoring(
    String? date,
    _i6.MonitorType? type,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMonitoring,
          [
            date,
            type,
          ],
        ),
        returnValue: _i4.Future<List<_i5.Monitoring>>.value(<_i5.Monitoring>[]),
      ) as _i4.Future<List<_i5.Monitoring>>);
}

/// A class which mocks [Monitoring].
///
/// See the documentation for Mockito's code generation for more information.
class MockMonitoring extends _i1.Mock implements _i5.Monitoring {
  @override
  int get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  set id(int? _id) => super.noSuchMethod(
        Invocation.setter(
          #id,
          _id,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get timestamp => (super.noSuchMethod(
        Invocation.getter(#timestamp),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#timestamp),
        ),
        returnValueForMissingStub: _i7.dummyValue<String>(
          this,
          Invocation.getter(#timestamp),
        ),
      ) as String);

  @override
  int get value => (super.noSuchMethod(
        Invocation.getter(#value),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}
